name: Nx Build and Deploy

on:
  push:
    branches:
      - '**'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23'
          cache: 'npm'
      - name: NPM Login
        run: npm install
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npx nx run-many --parallel --target=build --projects="api" && npm run ng-swagger
      - run: npx nx run-many --target=build --all --prod
      - run: npm run ngsw
      - run: ls dist

      - name: Archive production artifacts
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: nXdist
          path: |
            ./dist
          if-no-files-found: error

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'  # Only run on main branch
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist
          name: nXdist
      - run: ls
      - run: ls dist
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to private registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./dockerfile
          push: true
          tags: '${{ secrets.REGISTRY_URL }}/${{ secrets.REGISTRY_URL_PATH }}:latest'
#          cache-from: type=registry,ref=${{ secrets.REGISTRY_URL }}/${{ secrets.REGISTRY_URL_PATH }}:latest
#          cache-to: type=inline
